service: ${file(./package.json):name}
frameworkVersion: ">=1.34.0 <2.0.0"
package:
  individually: false
custom: ${file(./serverless-app/custom.yml)}
functions: ${file(./serverless-app/functions.yml)}
resources: ${file(./serverless-app/resources.yml)}
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  region: ${self:custom.region}
  deploymentPrefix: ${self:custom.deployment.folder}
  deploymentBucket:
    name: ${self:custom.deployment.bucket}
    blockPublicAccess: true
  stackTags: # Optional CF stack tags
    project: ${self:service}
    env: ${opt:stage, 'local'}
  tracing:
    apiGateway: true
    lambda: true # Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'
  environment: ${file(./serverless-app/environment.yml)}
  # iamManagedPolicies: ${file(./serverless-app/policies.yml)}
  iamRoleStatements: ${file(./serverless-app/iam.yml)}
  # vpc: ${file(./serverless-app/resources/vpc-config-private.yml)} # Opcional, gasta más. Si se quita... quitar de resources la creación de la vpc
plugins:
- serverless-offline
- serverless-pseudo-parameters
# - serverless-plugin-canary-deployments
# - serverless-sam

